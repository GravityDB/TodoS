{"version":3,"sources":["Components/Todo/Todo.js","Components/App/App.js","state/actionTypes.js","state/reducer.js","state/action.js","index.js"],"names":["Todo","title","body","handleRem","id","className","onClick","App","props","toods","array","arr","i","length","push","console","log","reverseArray","useSelector","state","len","dispatch","useDispatch","useState","setTitle","setBody","remove","add","value","onChange","e","target","placeholder","map","item","ADD_TODO","REM_TODO","defaultState","Getstate","localStorage","getItem","JSON","parse","actions","addTodo","type","actionTypes","payload","removeTodo","store","createStore","action","filter","app","subscribe","getState","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"gOAGe,SAASA,EAAT,GAA6C,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAAWC,EAAK,EAALA,GAClD,OACI,sBAAKC,UAAU,yDAAf,UACI,mBAAGA,UAAU,YAAb,SAA0BJ,IAC1B,uBACA,4BAAIC,IACJ,uBACA,wBAAQI,QAAS,WAAQH,EAAUC,IAAOC,UAAU,8CAApD,4BCYG,SAASE,EAAIC,GAExB,IAAMC,EAdW,SAAAC,GAEjB,IADA,IAAIC,EAAM,GACAC,EAAIF,EAAMG,OAAS,EAAGD,GAAK,EAAGA,IAEpCD,EAAIG,KAAMJ,EAAME,IAKpB,OAFAG,QAAQC,IAAIL,GAELA,EAKOM,CAAaC,aAAY,SAAAC,GAAK,OAAIA,MAC1CC,EAAMF,aAAY,SAAAC,GAAK,OAAIA,EAAMN,UACjCQ,EAAWC,cAEjB,EAA4BC,mBAAS,IAArC,mBAAQtB,EAAR,KAAeuB,EAAf,KACA,EAA0BD,mBAAS,IAAnC,mBAAQrB,EAAR,KAAcuB,EAAd,KAkBMtB,EAAY,SAACC,GACfiB,EAASb,EAAMkB,OAAOtB,KAG1B,OACI,sBAAKC,UAAU,qBAAf,UACI,sBAAKA,UAAU,gCAAf,UACI,oBAAIA,UAAU,qBAAd,uBACA,wBAAQC,QAjBF,WACC,KAAVL,GAAyB,KAATC,GAEjBmB,EAASb,EAAMmB,IAAIP,EAAM,EAAGnB,EAAOC,IAEvCsB,EAAS,IACTC,EAAQ,KAW4BpB,UAAU,8CAAtC,yBAEJ,uBACA,sBAAKA,UAAU,gBAAf,UACI,uBAAOuB,MAAO3B,EAAO4B,SA7Bb,SAAAC,GAChBN,EAASM,EAAEC,OAAOH,QA4BkCvB,UAAU,yCAAyC2B,YAAY,gBAC3G,uBACA,0BAAUJ,MAAO1B,EAAM2B,SA3BhB,SAAAC,GACfL,EAAQK,EAAEC,OAAOH,QA0BoCvB,UAAU,yCAAyC2B,YAAY,kBAIhH,uBACA,uBACA,uBACA,qBAAI3B,UAAU,oBAAd,2BAAiDe,KACjD,uBACEX,EAAMwB,KAAI,SAAAC,GACR,OAAQ,qCACR,cAAC,EAAD,CAAMjC,MAAOiC,EAAKjC,MAAOC,KAAMgC,EAAKhC,KAAME,GAAI8B,EAAK9B,GAAID,UAAWA,IAAY,gC,oBCxEjFgC,EAAW,WACXC,EAAW,WCCpBC,EAAe,GACfC,EAAWC,aAAaC,QAAQ,SAClB,OAAbF,IAEDD,EAAeI,KAAKC,MAAMJ,ICJ9B,IAqBeK,EArBC,CACZC,QAAS,SAACxC,EAAIH,EAAOC,GACjB,MAAO,CACH2C,KAAMC,EACNC,QAAS,CACL3C,KACAH,QACAC,UAIZ8C,WAAY,SAAC5C,GACT,MAAO,CACHyC,KAAMC,EACNC,QAAS,CACL3C,SCJV6C,EAAQC,aFJC,WAAgD,IAA/B/B,EAA8B,uDAAtBkB,EAAcc,EAAQ,uCAC1D,OAAIA,EAAON,OAASC,EACV,GAAN,mBAAW3B,GAAX,CAAkB,CACdf,GAAI+C,EAAOJ,QAAQ3C,GACnBH,MAAOkD,EAAOJ,QAAQ9C,MACtBC,KAAMiD,EAAOJ,QAAQ7C,QAElBiD,EAAON,OAASC,EAEhB3B,EAAMiC,QAAQ,SAAAC,GAAG,OAAIA,EAAIjD,KAAO+C,EAAOJ,QAAQ3C,MAE/Ce,KELf8B,EAAMK,WAAU,WACZvC,QAAQC,IAAIiC,EAAMM,YAClBhB,aAAaiB,QAAQ,QAASf,KAAKgB,UAAUR,EAAMM,gBAGvDG,IAASC,OACL,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACI,cAAC,EAAD,CAAKtB,IAAKgB,EAAgBC,QAASlB,OAAQiB,EAAgBK,eAE/DY,SAASC,eAAe,W","file":"static/js/main.02b35a8f.chunk.js","sourcesContent":["import React from 'react'\nimport './Todo.css'\n\nexport default function Todo({title, body, handleRem, id}) {\n    return (\n        <div className=\"flex border-2 border-dark fade-in rounded p-4 flex-col\">\n            <p className=\"font-bold\">{title}</p>\n            <br />\n            <p>{body}</p>\n            <br />\n            <button onClick={() => { handleRem(id) }} className=\"px-4 py-2 rounded text-white font-bold dark\">Remove Todo</button>\n        </div>\n    )\n}\n","import React from 'react'\nimport './App.css'\n\n//hooks\nimport { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n//Components\nimport Todo from '../Todo/Todo'\n\nconst reverseArray = array => {\n    var arr = []\n    for ( var i = array.length - 1; i >= 0; i-- )\n    {\n        arr.push( array[i] )\n    }\n\n    console.log(arr)\n\n    return arr\n}\n\nexport default function App(props) {\n\n    const toods = reverseArray(useSelector(state => state))\n    const len = useSelector(state => state.length)\n    const dispatch = useDispatch()\n\n    const [ title, setTitle ] = useState(\"\")\n    const [ body, setBody ] = useState(\"\")\n    const handleTitle = e => {\n        setTitle(e.target.value)\n    }\n\n    const handleBody = e => {\n        setBody(e.target.value)\n    }\n\n    const handleAdd = () => {\n        if ( title !== \"\" && body !== \"\")\n        {\n            dispatch(props.add(len + 1, title, body))\n        }\n        setTitle(\"\")\n        setBody(\"\")\n    }\n\n    const handleRem = (id) => {\n        dispatch(props.remove(id))\n    }\n\n    return (\n        <div className=\"mx-auto py-16 w-96\">\n            <div className=\"flex flex-row justify-between\">\n                <h1 className=\"text-3xl font-bold\">Todo List</h1>\n                <button onClick={handleAdd} className=\"px-4 py-2 rounded text-white font-bold dark\">Add Todo</button>\n            </div>\n            <br />\n            <div className=\"flex flex-col\">\n                <input value={title} onChange={handleTitle} className=\"border-2 rounded border-dark px-4 py-2\" placeholder=\"Enter Title\"/>\n                <br />\n                <textarea value={body} onChange={handleBody} className=\"border-2 rounded border-dark px-4 py-2\" placeholder=\"Enter Body\">\n\n                </textarea>\n            </div>\n            <br />\n            <hr />\n            <br />\n            <h2 className=\"text-xl font-bold\">Active Todos: {len}</h2>\n            <br />\n            { toods.map(item => {\n                return (<>\n                <Todo title={item.title} body={item.body} id={item.id} handleRem={handleRem}/><br /></>)\n            }) }\n        </div>\n    )\n}\n","export const ADD_TODO = 'ADD_TODO'\nexport const REM_TODO = 'REM_TODO'","import * as actionTypes from './actionTypes'\n\nvar defaultState = []\nvar Getstate = localStorage.getItem(\"todos\")\nif ( Getstate !== null )\n{\n    defaultState = JSON.parse(Getstate)\n}\n\nexport default function reducer(state = defaultState, action) {\n    if (action.type === actionTypes.ADD_TODO){\n        return [...state, {\n            id: action.payload.id,\n            title: action.payload.title,\n            body: action.payload.body\n        }]\n    } else if (action.type === actionTypes.REM_TODO)\n    {\n        return state.filter( app => app.id !== action.payload.id )\n    } else {\n        return state\n    }\n}","import * as actionTypes from './actionTypes'\n\nconst actions = {\n    addTodo: (id, title, body) => {\n        return {\n            type: actionTypes.ADD_TODO,\n            payload: {\n                id,\n                title,\n                body\n            }\n        }\n    },\n    removeTodo: (id) => {\n        return {\n            type: actionTypes.REM_TODO,\n            payload: {\n                id\n            }\n        }\n    }\n}\n\nexport default actions","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//Components\nimport App from './Components/App/App'\n\n//State\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './state/reducer'\nimport * as actions from './state/action'\n\n\nconst store = createStore(reducer)\n\nstore.subscribe(() => {\n    console.log(store.getState())\n    localStorage.setItem('todos', JSON.stringify(store.getState()))\n})\n\nReactDOM.render(\n    <Provider store={store}>\n        <App add={actions.default.addTodo} remove={actions.default.removeTodo}/>\n    </Provider>,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}